@using System.Globalization
@model PersonalFinanceManager.WebHost.Models.DashboardViewModel

<div class="container-fluid py-4">
    <!-- Header Section -->
    <div class="row mb-4 align-items-center">
        <div class="col">
            <h2 class="text-primary fw-bold">Tổng quan tài chính</h2>
        </div>
        <div class="col text-end">
            <a href="@Url.Action("Index", "TransactionsManagement")" class="btn btn-primary shadow-sm">
                <i class="bi bi-list-check me-1"></i> Xem giao dịch
            </a>
        </div>
    </div>

    <!-- Bộ lọc thời gian -->
    <div class="card shadow-sm mb-4">
        <div class="card-body">
            <form asp-action="Index" asp-controller="DashboardManagement" method="get" class="row g-4" id="filterForm">
                <div class="col-md-3">
                    <label for="startDate" class="form-label fw-medium">Từ ngày:</label>
                    <input type="text" id="startDate" name="startDate" value="@Model.StartDate?.ToString("dd/MM/yyyy")" class="form-control flatpickr" placeholder="Chọn ngày" autocomplete="off" />
                </div>
                <div class="col-md-3">
                    <label for="endDate" class="form-label fw-medium">Đến ngày:</label>
                    <input type="text" id="endDate" name="endDate" value="@Model.EndDate?.ToString("dd/MM/yyyy")" class="form-control flatpickr" placeholder="Chọn ngày" autocomplete="off" />
                </div>
                <div class="col-md-6 d-flex align-items-end gap-2">
                    <button type="submit" class="btn btn-primary shadow-sm"><i class="bi bi-search me-1"></i> Lọc</button>
                    <button type="button" class="btn btn-secondary shadow-sm" onclick="document.getElementById('filterForm').reset(); document.getElementById('filterForm').submit();"><i class="bi bi-x-circle me-1"></i> Xóa bộ lọc</button>
                </div>
            </form>
        </div>
    </div>

    <!-- Tổng quan -->
    <div class="row mb-4">
        <div class="col-md-4">
            <div class="card shadow-sm animate__animated animate__fadeIn">
                <div class="card-body">
                    <h5 class="card-title fw-medium">Tổng thu nhập</h5>
                    <p class="card-text fs-5">@Model.Summary.TotalIncome.ToString("N0", CultureInfo.GetCultureInfo("vi-VN")) VND</p>
                    <span class="badge bg-success">Cập nhật: @DateTime.Now.ToString("dd/MM/yyyy")</span>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card shadow-sm animate__animated animate__fadeIn">
                <div class="card-body">
                    <h5 class="card-title fw-medium">Tổng chi tiêu</h5>
                    <p class="card-text fs-5">@Model.Summary.TotalExpense.ToString("N0", CultureInfo.GetCultureInfo("vi-VN")) VND</p>
                    <span class="badge bg-danger">Cập nhật: @DateTime.Now.ToString("dd/MM/yyyy")</span>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card shadow-sm animate__animated animate__fadeIn">
                <div class="card-body">
                    <h5 class="card-title fw-medium">Số dư</h5>
                    <p class="card-text fs-5">@Model.Summary.Balance.ToString("N0", CultureInfo.GetCultureInfo("vi-VN")) VND</p>
                    <span class="badge bg-info text-dark">Cập nhật: @DateTime.Now.ToString("dd/MM/yyyy")</span>
                </div>
            </div>
        </div>
    </div>

    <!-- Biểu đồ -->
    <div class="row mb-4">
        <div class="col-md-6">
            <div class="card shadow-sm animate__animated animate__fadeIn">
                <div class="card-body">
                    <h5 class="card-title fw-medium">Phân bổ theo danh mục</h5>
                    @if (Model.Summary.CategoryBreakdown != null && Model.Summary.CategoryBreakdown.Any())
                    {
                        <canvas id="categoryChart" height="200"></canvas>
                    }
                    else
                    {
                        <p class="text-muted">Chưa có dữ liệu để hiển thị biểu đồ phân bổ.</p>
                    }
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="card shadow-sm animate__animated animate__fadeIn">
                <div class="card-body">
                    <h5 class="card-title fw-medium">Thu/Chi theo tháng</h5>
                    <canvas id="monthlyChart" height="200"></canvas>
                </div>
            </div>
        </div>
    </div>

    <!-- Ngân sách -->
    <div class="row">
        <div class="col">
            <div class="card shadow-sm animate__animated animate__fadeIn">
                <div class="card-body">
                    <h5 class="card-title fw-medium">Ngân sách</h5>
                    @if (Model.BudgetsDto != null && Model.BudgetsDto.Any())
                    {
                        <canvas id="budgetChart" height="200"></canvas>
                    }
                    else
                    {
                        <p class="text-muted">Chưa có ngân sách nào được thiết lập.</p>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/animate.css@4.1.1/animate.min.css" />
    <link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/select2-bootstrap-5-theme/1.3.0/select2-bootstrap-5-theme.min.css" integrity="sha512-z/90a5SWiu4MWVelb5+ny7sAayYUfMmdXKEAbpj27PfdkamNdyI3hcjxPxkOPbrXoKIm7r9V2mElt5f1OtVhqA==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <!-- Liên kết CSS của Transaction để đồng bộ -->
    <link rel="stylesheet" href="~/css/dashboard-management.css" asp-append-version="true" />

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Khởi tạo Flatpickr
            flatpickr('.flatpickr', {
                dateFormat: 'd/m/Y',
                allowInput: true,
                defaultDate: '@Model.StartDate?.ToString("dd/MM/yyyy")' || '@Model.EndDate?.ToString("dd/MM/yyyy")',
                onClose: function (selectedDates, dateStr, instance) {
                    instance.element.value = dateStr;
                }
            });

            // Biểu đồ phân bổ danh mục
            @if (Model.Summary.CategoryBreakdown != null && Model.Summary.CategoryBreakdown.Any())
            {
                @:var ctxCategory = document.getElementById('categoryChart').getContext('2d');
                @:var categoryChart = new Chart(ctxCategory, {
                @:type: 'pie',
                @:data: {
                @:labels: @Html.Raw(Json.Serialize(Model.Summary.CategoryBreakdown.Keys)),
                @:datasets: [{
                @:data: @Html.Raw(Json.Serialize(Model.Summary.CategoryBreakdown.Values)),
                @:backgroundColor: ['#36A2EB', '#FF6384', '#FFCE56', '#4BC0C0']
                @:}]
                @:},
                @:options: {
                @:responsive: true,
                @:plugins: {
                @:legend: { position: 'top' },
                @:title: { display: true, text: 'Phân bổ theo danh mục' }
                @:}
                @:}
                @:});
            }

            // Biểu đồ thu/chi theo tháng
            async function loadMonthlySummary() {
                let url = '/DashboardManagement/GetMonthlySummary';
                const params = new URLSearchParams();
                @if (Model.StartDate.HasValue)
                {
                    @:params.append('startDate', '@Model.StartDate.Value.ToString("yyyy-MM-dd")');
                }
                @if (Model.EndDate.HasValue)
                {
                    @:params.append('endDate', '@Model.EndDate.Value.ToString("yyyy-MM-dd")');
                }
                if (params.toString()) {
                    url += `?${params.toString()}`;
                }

                try {
                    const response = await fetch(url, {
                        headers: {
                            'Accept': 'application/json'
                        }
                    });
                    if (!response.ok) {
                        throw new Error(`HTTP ${response.status}: ${await response.text()}`);
                    }
                    const data = await response.json();
                    const labels = Object.keys(data);
                    const incomeData = labels.map(key => data[key].income);
                    const expenseData = labels.map(key => data[key].expense);

                    const ctxMonthly = document.getElementById('monthlyChart').getContext('2d');
                    new Chart(ctxMonthly, {
                        type: 'bar',
                        data: {
                            labels: labels,
                            datasets: [
                                {
                                    label: 'Thu nhập',
                                    data: incomeData,
                                    backgroundColor: '#36A2EB'
                                },
                                {
                                    label: 'Chi tiêu',
                                    data: expenseData,
                                    backgroundColor: '#FF6384'
                                }
                            ]
                        },
                        options: {
                            responsive: true,
                            scales: {
                                y: { beginAtZero: true, title: { display: true, text: 'Số tiền (VND)' } }
                            },
                            plugins: {
                                legend: { position: 'top' },
                                title: { display: true, text: 'Thu/Chi theo tháng' }
                            }
                        }
                    });
                } catch (error) {
                    console.error('Error fetching monthly data:', error);
                    toastr.error('Không thể tải dữ liệu thu/chi: ' + error.message);
                }
            }

            // Biểu đồ ngân sách
            async function loadBudgetUsage() {
                try {
                    const response = await fetch('/DashboardManagement/GetBudgetUsage', {
                        headers: {
                            'Accept': 'application/json'
                        }
                    });
                    if (!response.ok) {
                        throw new Error(`HTTP ${response.status}: ${await response.text()}`);
                    }
                    const data = await response.json();
                    const labels = data.map(d => d.categoryName);
                    const budgetAmounts = data.map(d => d.budgetAmount);
                    const spentAmounts = data.map(d => d.spentAmount);

                    const ctx = document.getElementById('budgetChart').getContext('2d');
                    new Chart(ctx, {
                        type: 'bar',
                        data: {
                            labels: labels,
                            datasets: [
                                {
                                    label: 'Ngân sách',
                                    data: budgetAmounts,
                                    backgroundColor: '#36A2EB'
                                },
                                {
                                    label: 'Đã chi',
                                    data: spentAmounts,
                                    backgroundColor: '#FF6384'
                                }
                            ]
                        },
                        options: {
                            responsive: true,
                            plugins: {
                                tooltip: { mode: 'index', intersect: false }
                            },
                            scales: {
                                y: { beginAtZero: true }
                            }
                        }
                    });
                } catch (error) {
                    console.error('Error fetching budget data:', error);
                    toastr.error('Không thể tải dữ liệu ngân sách: ' + error.message);
                }
            }

            // Gọi hàm
            loadMonthlySummary();
            loadBudgetUsage();
        });
    </script>
}