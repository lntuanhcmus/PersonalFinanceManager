@using System.Globalization
@model PersonalFinanceManager.WebHost.Models.TransactionsViewModel
@using PersonalFinanceManager.Shared.Enum
@using PersonalFinanceManager.WebHost.Helper
@using X.PagedList.Mvc.Core
@using X.PagedList.Extensions

<div class="row mb-3">
    <div class="col">
        <h2 class="text-primary">Danh sách giao dịch</h2>
    </div>
    <div class="col text-end">
        <a href="@Url.Action("AddTransaction")" class="btn btn-success me-2">
            <i class="bi bi-plus-circle"></i> Thêm giao dịch
        </a>
        <a href="@Url.Action("RefreshFromGmail")" class="btn btn-info text-white">
            <i class="bi bi-arrow-clockwise"></i> Lấy từ Gmail
        </a>
    </div>
</div>

@if (TempData["Success"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        @TempData["Success"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}
@if (TempData["Error"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        @TempData["Error"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<!-- Form tìm kiếm nằm ngang -->
<div class="row mb-3 transaction-list">
    <div class="col">
        <form asp-action="Index" method="get" id="searchForm">
            <div class="row">
                <div class="form-group mb-2 col-2">
                    <label for="transactionId" class="form-label">Mã GD:</label>
                    <input type="text" id="transactionId" name="transactionId" value="@Model.TransactionId" class="form-control form-control-sm" autocomplete="off" />
                </div>
                <div class="form-group mb-2 col-2">
                    <label for="startDate" class="form-label">Từ ngày:</label>
                    <input type="text" id="startDate" name="startDate" value="@Model.StartDate" class="form-control form-control-sm" placeholder="Chọn ngày" autocomplete="off" />
                </div>
                <div class="form-group mb-2 col-2">
                    <label for="endDate" class="form-label">Đến ngày:</label>
                    <input type="text" id="endDate" name="endDate" value="@Model.EndDate" class="form-control form-control-sm" placeholder="Chọn ngày" autocomplete="off" />
                </div>
                <div class="form-group mb-2 col-2">
                    <label for="minAmount" class="form-label">Số tiền từ:</label>
                    <input type="number" id="minAmount" name="minAmount" value="@Model.MinAmount" class="form-control form-control-sm" step="any" autocomplete="off" />
                </div>
                <div class="form-group mb-2 col-2">
                    <label for="maxAmount" class="form-label">Đến:</label>
                    <input type="number" id="maxAmount" name="maxAmount" value="@Model.MaxAmount" class="form-control form-control-sm" step="any" autocomplete="off" />
                </div>
                <div class="form-group mb-2 col-2">
                    <label for="category" class="form-label">Loại giao dịch</label>
                    <select asp-for="TransactionTypeId"
                            asp-items="Model.TransactionTypes"
                            class="form-control form-control-sm">
                        <option value="">-- Chọn Loại giao dịch --</option>
                    </select>
                </div>
                
            </div>
            <div class="row">
                <div class="form-group mb-2 col-2">
                    <label for="category" class="form-label">Danh mục:</label>
                    <select asp-for="CategoryId"
                            asp-items="Model.Categories"
                            class="form-control form-control-sm">
                        <option value="">-- Chọn danh mục --</option>
                    </select>
                </div>
                <div class="form-group mb-2 col-2">
                    <label for="category" class="form-label">Trạng thái:</label>
                    <select asp-for="Status"
                            asp-items="Model.Statuses"
                            class="form-control form-control-sm">
                        <option value="">-- Chọn danh mục --</option>
                    </select>
                </div>
                <div class="form-group mb-2 col-2">
                    <label for="sourceAccount" class="form-label">TK nguồn:</label>
                    <input type="text" id="sourceAccount" name="sourceAccount" value="@Model.SourceAccount" class="form-control form-control-sm" autocomplete="off" />
                </div>
                <div class="form-group mb-2 col-2">
                    <label for="content" class="form-label">Nội dung</label>
                    <input type="text" id="content" name="content" value="@Model.Content" class="form-control form-control-sm" autocomplete="off" />
                </div>
                <div class="form-group mb-2 col-4" style="display: flex; flex-direction: row; padding: 10px; margin-top: 20px;">
                    <button type="submit" class="btn btn-primary btn-sm">Tìm kiếm</button>
                    <button type="button" class="btn btn-secondary btn-sm" style="margin-left: 15px" onclick="resetForm()">Xóa bộ lọc</button>
                    <button type="submit" formaction="@Url.Action("Export")" formmethod="get" class="btn btn-success btn-sm ms-2">
                        <i class="bi bi-file-earmark-spreadsheet"></i> Xuất Excel
                    </button>
                </div>
            </div>
        </form>
    </div>
</div>

<div class="card">
    <div class="card-body">
        <div class="table-responsive">
            <table class="table table-striped table-hover">
                <thead class="table-dark">
                    <tr>
                        <th>STT</th>
                        <th>Thời gian giao dịch</th>
                        <th>Mã giao dịch</th>
                        <th>Nguồn gửi</th>
                        <th>Nguồn nhận</th>
                        <th>Người Nhận</th>
                        <th>Tổng tiền</th>
                        <th>Số chi thực</th>
                        <th>Nội dung</th>
                        <th>Loại giao dịch</th>
                        <th>Mục đích giao dịch</th>
                        <th>Trạng Thái</th>
                        <th>Hành động</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model != null && Model.Transactions.Any())
                    {
                        
                        int index = 1;
                        foreach (var item in Model.Transactions)
                        {
                            decimal actualAmt = item.Amount - item.RepaymentAmount;
                            <tr>
                                <td>@index</td>
                                <td>@item.TransactionTime</td>
                                <td>@item.TransactionId</td>
                                <td>@item.SourceAccount</td>
                                <td>@item.RecipientAccount</td>
                                <td>@item.RecipientName</td>
                                <td>@item.Amount.ToString("N0", CultureInfo.GetCultureInfo("vi-VN")) VND</td>
                                <td>@actualAmt.ToString("N0", CultureInfo.GetCultureInfo("vi-VN")) VND</td>
                                <td>@item.Description</td>
                                <td>@item.TransactionTypeName</td>
                                <td>@item.CategoryName</td>
                                <td>
                                    @if (item.Status == (int)TransactionStatusEnum.Pending)
                                    {
                                        var displayStatus = EnumHelper.GetDisplayName<TransactionStatusEnum>(TransactionStatusEnum.Pending);
                                        <span class="badge bg-warning">@displayStatus</span>
                                    }
                                    @if (item.Status == (int)TransactionStatusEnum.Success)
                                    {
                                        var displayStatus = EnumHelper.GetDisplayName<TransactionStatusEnum>(TransactionStatusEnum.Success);
                                        <span class="badge bg-success">@displayStatus</span>
                                    }
                                    @if (item.Status == (int)TransactionStatusEnum.Failed)
                                    {
                                        var displayStatus = EnumHelper.GetDisplayName<TransactionStatusEnum>(TransactionStatusEnum.Failed);
                                        <span class="badge bg-error">@displayStatus</span>
                                    }
                                </td>
                                <td>
                                    <a href="@Url.Action("EditTransaction", new { id = item.TransactionId })" class="btn btn-sm btn-primary mb-2">
                                        <i class="bi bi-pencil"></i>
                                    </a>
                                    @if(item.TransactionTypeId == (int)TransactionTypeEnum.Income)
                                    {
                                        <form asp-action="DeleteTransaction" method="post" class="d-inline delete-form" id="delete-form-@item.TransactionId">
                                            <input type="hidden" name="id" value="@item.TransactionId" />
                                            <button type="button" class="btn btn-sm btn-danger delete-btn" data-form-id="delete-form-@item.TransactionId">
                                                <i class="bi bi-trash"></i>
                                            </button>
                                        </form>
                                    }
                                </td>
                            </tr>
                            index++;
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="10" class="text-center text-muted">Không có giao dịch nào</td>
                        </tr>
                    }
                </tbody>
            </table>

            <!-- Phân trang -->
            <div class="d-flex justify-content-center mt-3">
                @Html.PagedListPager(Model.PagedTransactions, page => Url.Action("Index", new
                    {
                        transactionId = Model.TransactionId,
                        startDate = Model.StartDate,
                        endDate = Model.EndDate,
                        minAmount = Model.MinAmount,
                        maxAmount = Model.MaxAmount,
                        categoryId = Model.CategoryId,
                        sourceAccount = Model.SourceAccount,
                        content = Model.Content,
                        page
                    }),
                    new PagedListRenderOptions
                    {
                        LiElementClasses = new[] { "page-item" },
                        PageClasses = new[] { "page-link" },
                        DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
                        DisplayLinkToNextPage = PagedListDisplayMode.Always,
                        LinkToPreviousPageFormat = "<i class='bi bi-chevron-left'></i>",
                        LinkToNextPageFormat = "<i class='bi bi-chevron-right'></i>",
                        MaximumPageNumbersToDisplay = 5, // Giới hạn số nút trang hiển thị
                        DisplayEllipsesWhenNotShowingAllPageNumbers = true // Hiển thị "..." khi có nhiều trang
                    })
            </div>

            <div class="d-flex justify-content-center align-items-center mt-2 gap-2">
                <span class="badge bg-info text-dark">
                    Hiển thị @Model.PagedTransactions.Count / @Model.PagedTransactions.TotalItemCount giao dịch
                    (Trang @Model.PagedTransactions.PageNumber / @Model.PagedTransactions.PageCount)
                </span>
                <div class="input-group w-auto">
                    <input type="number" id="goToPage" class="form-control" min="1" max="@Model.PagedTransactions.PageCount" placeholder="Trang" style="width: 80px;" />
                    <button class="btn btn-outline-primary" onclick="goToPage()">Đi</button>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css" />
    <link rel="stylesheet" href="https://cdn.datatables.net/1.13.6/css/dataTables.bootstrap5.min.css" />
    <script src="https://cdn.datatables.net/1.13.6/js/jquery.dataTables.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            flatpickr('#startDate', {
                dateFormat: 'd/m/Y', // Định dạng hiển thị: dd/MM/yyyy
                allowInput: true,    // Cho phép nhập tay
                onClose: function (selectedDates, dateStr, instance) {
                    // Cập nhật giá trị khi chọn ngày
                    instance.element.value = dateStr;
                }
            });

            flatpickr('#endDate', {
                dateFormat: 'd/m/Y', // Định dạng hiển thị: dd/MM/yyyy
                allowInput: true,    // Cho phép nhập tay
                onClose: function (selectedDates, dateStr, instance) {
                    // Cập nhật giá trị khi chọn ngày
                    instance.element.value = dateStr;
                }
            });
            document.querySelectorAll('.delete-btn').forEach(function (button) {
                button.addEventListener('click', function () {
                    var formId = this.getAttribute('data-form-id');
                    var form = document.getElementById(formId);

                    showConfirmationModal(
                        'Bạn có chắc muốn xóa giao dịch này?',
                        function () {
                            form.submit(); // Submit form khi xác nhận
                        }
                    );
                });
            });
        });

        function resetForm() {
            // Chuyển hướng về Index mà không có tham số lọc
            window.location.href = '@Url.Action("Index", "TransactionsManagement")';
        }

        function goToPage() {
            var page = document.getElementById('goToPage').value;
            if (page && page >= 1 && page <= @Model.PagedTransactions.PageCount) {
                window.location.href = '@Url.Action("Index", new { /* Các param */ page = "__page__" })'.replace('__page__', page);
            }
        }

    </script>
    
}